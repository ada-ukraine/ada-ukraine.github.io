name: Build Sphinx Books

on: [workflow_dispatch]

defaults:
  run:
    working-directory: frontend

jobs:
  build:

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        python-version: ['3.11']
        node-version: [20.x]
    env:
      HIDDEN_BOOKS: ${{ github.workspace }}/content/hidden_ukr.txt

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v4
    - name: Enable Corepack
      run: corepack enable
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: 'frontend'
    - name: Install OS Deps
      run: |
        sudo apt-get update && \
        sudo apt-get install -y \
        crudini \
        graphviz \
        plantuml \
        texlive-latex-base \
        texlive-latex-recommended \
        texlive-latex-extra \
        texlive-fonts-recommended \
        texlive-fonts-extra \
        latexmk \
        texlive-xetex \
        fonts-lmodern \
        fonts-open-sans \
        fonts-dejavu \
        poppler-utils
    - name: Install GNAT FSF
      run: |
        ${GITHUB_WORKSPACE}/.github/workflows/install_toolchain.sh --gnat --gnatprove --gprbuild
    - name: Increase max user watches
      run: |
        echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && \
        sudo sysctl -p
    - name: Install dependencies
      run: yarn --immutable
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Webpack & Sphinx production
      run: make cleanall webpack-production sphinx-production
#    - name: Run SPHINX content tests
#      run: make -k HIDDEN_BOOKS=$HIDDEN_BOOKS HIDDEN_CONTENTS="" test_all_content
#    - name: Build PDF books including build/runtime output
#      run: make HIDDEN_BOOKS=$HIDDEN_BOOKS HIDDEN_CONTENTS="" pdf_books
    - name: Archive PDF books in artifact
      uses: actions/upload-artifact@v4
      with:
        name: learn-pdf-books
        path: |
          frontend/dist/pdf_books
#        if-no-files-found: error
        retention-days: 1
        compression-level: 9
#    - name: Build EPUB books including build/runtime output
#      run: make HIDDEN_BOOKS=$HIDDEN_BOOKS HIDDEN_CONTENTS="" epub_books
    - name: Archive EPUB books in artifact
      uses: actions/upload-artifact@v4
      with:
        name: learn-epub-books
        path: |
          frontend/dist/epub_books
#        if-no-files-found: error
        retention-days: 1
        compression-level: 9

    - name: Upload to page artifact
      uses: actions/upload-pages-artifact@v3.0.1
      with:
        path: frontend/dist/html/

  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    steps:
      - name: Deploy artifact
        id: deployment
        uses: actions/deploy-pages@v4
